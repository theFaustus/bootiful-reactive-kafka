server:
  port: 8005

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    propagation:
      type: b3
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

spring:
  profiles:
    active: local
  application:
    name: stock-notification-service
  data:
    r2dbc:
      repositories:
        enabled: true
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/analytics
    username: admin
    password: 123456
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/analytics
    baseline-on-migrate: true
    repair-on-migrate: true
  netty:
    leak-detection: paranoid
  kafka:
    consumers:
      DEFAULT:
        properties:
          bootstrap.servers: localhost:9092
          schema.registry.url: localhost:8081
          auto.offset.reset: latest
          spring.json.use.type.headers: false
          key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
          spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      SESSION-STATE-UPDATE:
        topic: session-state-update-events
        properties:
          client.id: analytics.session-state-update
          group.id: analytics.session-state-update.group
      LOGGED-IN-EVENT:
        topic: logged-in-events
        properties:
          client.id: analytics.logged-in-events
          group.id: analytics.logged-in-events.group
          value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          spring.json.value.default.type: "inc.evil.bootiful_reactive_kafka.messaging.kafka.log_event.model.LoggedInEvent"
      LOGGED-OUT-EVENT:
        topic: logged-out-events
        properties:
          client.id: analytics.logged-out-events
          group.id: analytics.logged-out-events.group
          value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          spring.json.value.default.type: "inc.evil.bootiful_reactive_kafka.messaging.kafka.log_event.model.LoggedOutEvent"
logging:
  level:
    inc.evil: DEBUG
    io.r2dbc.postgresql.QUERY: DEBUG # for queries
    io.r2dbc.postgresql.PARAM: DEBUG # for parameters
    org.zalando.logbook: trace
